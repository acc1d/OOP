/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BAB6KKN;

import BAB5KKN.*;
import BAB4KKN.*;
import BAB3KKN.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author sanja
 */
public class GUI_KOPI extends javax.swing.JFrame {

    /**
     * Creates new form GUI_KOPI
     */
    private MAKANANCD makananCD;
    private MINUMANCD minumanCD;
    private CAMILANCD camilanCD;

    public GUI_KOPI() {
        initComponents();
          this.makananCD = new MAKANANCD();
          this.minumanCD = new MINUMANCD();
          this.camilanCD = new CAMILANCD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        MAKANAN = new javax.swing.JTextField();
        MINUMAN = new javax.swing.JTextField();
        CAMILAN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        SIMPAN = new javax.swing.JButton();
        HAPUS = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PROSES_HASIL = new javax.swing.JTextField();
        PROSES = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("MENU ITEM");

        jLabel2.setText("MAKANAN");

        jLabel3.setText("MINUMAN");

        MAKANAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAKANANActionPerformed(evt);
            }
        });

        CAMILAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CAMILANActionPerformed(evt);
            }
        });

        jLabel5.setText("CAMILAN");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Makanan", "Minuman", "Camilan", "Harga"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        SIMPAN.setText("Simpan");
        SIMPAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIMPANActionPerformed(evt);
            }
        });

        HAPUS.setText("Hapus");
        HAPUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HAPUSActionPerformed(evt);
            }
        });

        jLabel6.setText("TOTAL HARGA");

        PROSES.setText("PROSES");
        PROSES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PROSESActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(MAKANAN)
                                .addComponent(MINUMAN, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                .addComponent(CAMILAN))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SIMPAN)
                                .addGap(26, 26, 26)
                                .addComponent(HAPUS))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PROSES_HASIL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PROSES, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(MAKANAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(MINUMAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(CAMILAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SIMPAN)
                            .addComponent(HAPUS))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(PROSES_HASIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PROSES)
                        .addGap(30, 30, 30))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SIMPANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIMPANActionPerformed
System.out.println("--- Tombol SIMPAN Ditekan ---"); // DEBUG

    String makananStr = MAKANAN.getText().trim();
    String minumanStr = MINUMAN.getText().trim();
    String camilanStr = CAMILAN.getText().trim();

    System.out.println("Input Makanan: '" + makananStr + "'"); // DEBUG
    System.out.println("Input Minuman: '" + minumanStr + "'"); // DEBUG
    System.out.println("Input Camilan: '" + camilanStr + "'"); // DEBUG

    int hargaMakanan = 0;
    int hargaMinuman = 0;
    int hargaCamilan = 0;

    if (!makananStr.isEmpty()) {
        try {
            hargaMakanan = this.makananCD.getHarga(makananStr);
        } catch (Exception ex) {
            System.err.println("Error saat getHarga Makanan: " + ex.getMessage()); // DEBUG ERROR
        }
    }
    System.out.println("Harga Makanan Dihitung: " + hargaMakanan); // DEBUG

    if (!minumanStr.isEmpty()) {
        try {
            hargaMinuman = this.minumanCD.getHarga(minumanStr);
        } catch (Exception ex) {
            System.err.println("Error saat getHarga Minuman: " + ex.getMessage()); // DEBUG ERROR
        }
    }
    System.out.println("Harga Minuman Dihitung: " + hargaMinuman); // DEBUG

    if (!camilanStr.isEmpty()) {
        try {
            hargaCamilan = this.camilanCD.getHarga(camilanStr);
        } catch (Exception ex) {
            System.err.println("Error saat getHarga Camilan: " + ex.getMessage()); // DEBUG ERROR
        }
    }
    System.out.println("Harga Camilan Dihitung: " + hargaCamilan); // DEBUG

    int totalHargaItemSet = hargaMakanan + hargaMinuman + hargaCamilan;
    System.out.println("Total Harga Item Set: " + totalHargaItemSet); // DEBUG

    if (!makananStr.isEmpty() || !minumanStr.isEmpty() || !camilanStr.isEmpty()) {
        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            System.out.println("Model tabel didapatkan. Nama kelas model: " + model.getClass().getName()); // DEBUG
            System.out.println("Sebelum addRow: Jumlah Baris = " + model.getRowCount() + ", Jumlah Kolom = " + model.getColumnCount()); // DEBUG
            
            // Data yang akan ditambahkan
            Object[] rowData = new Object[]{
                    makananStr,
                    minumanStr,
                    camilanStr,
                    totalHargaItemSet
            };
            System.out.println("Data untuk baris baru: " + java.util.Arrays.toString(rowData)); // DEBUG

            model.addRow(rowData);
            System.out.println("Setelah addRow: Jumlah Baris = " + model.getRowCount()); // DEBUG
            System.out.println("Baris BERHASIL ditambahkan ke model!"); // DEBUG

            MAKANAN.setText("");
            MINUMAN.setText("");
            CAMILAN.setText("");
            MAKANAN.requestFocusInWindow(); 
            
        } catch (Exception ex) {
            System.err.println("--- KESALAHAN SAAT MENAMBAHKAN BARIS KE TABEL ---"); // DEBUG ERROR
            ex.printStackTrace(); // Ini akan mencetak detail error ke Output
        }
        
   } else {
        System.out.println("Tidak ada item yang diinput, tidak ada baris ditambahkan."); // DEBUG
         }
    System.out.println("--- Akhir Aksi SIMPAN ---"); // DEBUG
    System.out.println("--- Akhir Aksi SIMPAN ---"); // DEBUG
    }//GEN-LAST:event_SIMPANActionPerformed

    private void MAKANANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAKANANActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAKANANActionPerformed

    private void CAMILANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAMILANActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CAMILANActionPerformed

    private void HAPUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HAPUSActionPerformed
        // TODO add your handling code here:

    int selectedRow = jTable1.getSelectedRow();

 
    if (selectedRow != -1) { 
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
            model.removeRow(selectedRow);

        PROSES_HASIL.setText(""); 
        
        System.out.println("Baris ke-" + selectedRow + " berhasil dihapus."); // DEBUG (Opsional)

    } else {
            System.out.println("Tidak ada baris yang dipilih untuk dihapus. Tidak ada aksi dilakukan."); // DEBUG (Opsional)
}
    }//GEN-LAST:event_HAPUSActionPerformed

    private void PROSESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PROSESActionPerformed
        // TODO add your handling code here:
  
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 


    int rowCount = model.getRowCount();

  
    long totalKeseluruhanHarga = 0;

    
    if (rowCount == 0) {
        PROSES_HASIL.setText("0"); 
        System.out.println("Tabel pesanan kosong, total harga adalah 0."); 
        return; 
    }

    
    for (int i = 0; i < rowCount; i++) {
       
        Object nilaiHargaObj = model.getValueAt(i, 3);

       
        if (nilaiHargaObj instanceof Integer) {
            totalKeseluruhanHarga += (Integer) nilaiHargaObj;
        } else if (nilaiHargaObj instanceof Number) { 
            
            totalKeseluruhanHarga += ((Number) nilaiHargaObj).longValue();
        } else {
           
            System.err.println("Peringatan: Data harga di baris " + i + " (nilai: '" + nilaiHargaObj + "') bukan format angka yang dikenali.");
        }
    }


    PROSES_HASIL.setText(String.valueOf(totalKeseluruhanHarga));
    System.out.println("Total keseluruhan harga dihitung: " + totalKeseluruhanHarga); // DEBUG (Opsional)

    }//GEN-LAST:event_PROSESActionPerformed

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_KOPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_KOPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_KOPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_KOPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_KOPI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CAMILAN;
    private javax.swing.JButton HAPUS;
    private javax.swing.JTextField MAKANAN;
    private javax.swing.JTextField MINUMAN;
    private javax.swing.JButton PROSES;
    private javax.swing.JTextField PROSES_HASIL;
    private javax.swing.JButton SIMPAN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
